--2018 Mohammad Rasmi Khashashneh
--
-- bullet.script
--
--Permission is hereby granted, free of charge, to any person obtaining a copy
--of this software and associated documentation files (the "Software"), to deal
--in the Software without restriction, including without limitation the rights
--to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
--copies of the Software, and to permit persons to whom the Software is
--furnished to do so, subject to the following conditions:
--
--The above copyright notice and this permission notice shall be included in all
--copies or substantial portions of the Software.
--
--THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
--IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
--FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
--AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
--LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
--UT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
--SOFTWARE.

local SPEED = vmath.vector3(150, 0, 0)
local GAME_WIDTH = 223
local GAME_HEIGHT = 176
local BULLET_RANGE = 170
local MSG_COLLISION_RESPONSE = "collision_response"
local MSG_BULLET_PLAYER_HIT = "bullet_player_hit"

go.property("pong", false)
go.property("level", hash(""))

function init(self)
	self.spawn_pos = go.get_position()
end

function update(self, dt)
	local pos = go.get_position()
	if pos.x > GAME_WIDTH or pos.x < 0 or pos.y > GAME_HEIGHT or pos.y < 0 then
		go.delete()
	elseif vmath.length(pos - self.spawn_pos) >= BULLET_RANGE then
		go.delete()
	else
		local pos = go.get_position() + vmath.rotate(go.get_rotation(), SPEED * dt)
		go.set_position(pos)
	end
end

function rebound()
	-- TODO: implement me
	print("booo, not implemented yet")
end

function on_message(self, message_id, message)
	if message_id == hash(MSG_COLLISION_RESPONSE) then -- with bullet
		if message.other_id ~= self.level then
			--msg.post(self.level, MSG_BULLET_PLAYER_HIT, {player = message.other_id})
			go.delete()
		elseif self.pong then
			rebound()
		else
			go.delete()
			
		end
	end
end